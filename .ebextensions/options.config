option_settings:
  aws:autoscaling:launchconfiguration:
    RootVolumeType: gp2
    RootVolumeSize: "600"
  aws:autoscaling:asg:
    MinSize: 1
    MaxSize: 100
    EnableCapacityRebalancing: true
  aws:elasticbeanstalk:environment:
    LoadBalancerType: application
  aws:elasticbeanstalk:environment:process:default:
    StickinessEnabled: true
  aws:ec2:instances:
    EnableSpot: true
    InstanceTypes: 'c5.4xlarge c5.9xlarge m5.2xlarge m5.4xlarge'
    SpotFleetOnDemandBase: '0'
    SpotFleetOnDemandAboveBasePercentage: '0'
  AWSEBAutoScalingScaleDownPolicy.aws:autoscaling:trigger:
    LowerBreachScaleIncrement: '-1'
  AWSEBAutoScalingScaleUpPolicy.aws:autoscaling:trigger:
    UpperBreachScaleIncrement: '1'
  AWSEBCloudwatchAlarmHigh.aws:autoscaling:trigger:
    UpperThreshold: '60' # From looking at monitoring. If using NetworkOut: 80 MB/min per player, so 480000000 is six players
  AWSEBCloudwatchAlarmLow.aws:autoscaling:trigger:
    BreachDuration: '1'
    EvaluationPeriods: '1'
    LowerThreshold: '30'  # From looking at monitoring.
    MeasureName: CPUUtilization
    Period: '5'
    Statistic: Average
    Unit: Percent
  aws:elasticbeanstalk:command:
    DeploymentPolicy: RollingWithAdditionalBatch
    BatchSizeType: Percentage
    BatchSize: 25
container_commands:
  add-swap-space:
    command: "/bin/bash .ebextensions/scripts/add-swap-space.sh"
    ignoreErrors: true